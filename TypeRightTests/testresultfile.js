// File Autogenerated by the Client Script Generator.  DO NOT EDIT
var TestEnumNamespace;
(function (TestEnumNamespace) {
    /** Test default syntax enum */
    var DefaultSyntaxEnum;
    (function (DefaultSyntaxEnum) {
        /** Is One */
        DefaultSyntaxEnum[DefaultSyntaxEnum["One"] = 1] = "One";
        /** Is Two */
        DefaultSyntaxEnum[DefaultSyntaxEnum["Three"] = 3] = "Three";
        /** IS five */
        DefaultSyntaxEnum[DefaultSyntaxEnum["Five"] = 5] = "Five";
        /** Is 7 */
        DefaultSyntaxEnum[DefaultSyntaxEnum["Seven"] = 7] = "Seven";
    })(DefaultSyntaxEnum = TestEnumNamespace.DefaultSyntaxEnum || (TestEnumNamespace.DefaultSyntaxEnum = {}));
    /** Test enum */
    var ExplicitNotExtendedSyntax;
    (function (ExplicitNotExtendedSyntax) {
        /** Is two */
        ExplicitNotExtendedSyntax[ExplicitNotExtendedSyntax["Two"] = 2] = "Two";
        /** Is four */
        ExplicitNotExtendedSyntax[ExplicitNotExtendedSyntax["Four"] = 4] = "Four";
        /**  */
        ExplicitNotExtendedSyntax[ExplicitNotExtendedSyntax["Six"] = 6] = "Six";
        /**  */
        ExplicitNotExtendedSyntax[ExplicitNotExtendedSyntax["Eight"] = 8] = "Eight";
    })(ExplicitNotExtendedSyntax = TestEnumNamespace.ExplicitNotExtendedSyntax || (TestEnumNamespace.ExplicitNotExtendedSyntax = {}));
    /** Test extended syntax enum */
    TestEnumNamespace.ExtendedSyntaxEnum = {
        /** Is One */
        Blue: {
            id: 1,
            name: "BLUEEEEE",
            abbrev: "Bl",
        },
        /** Is Two */
        Green: {
            id: 2,
            name: "Green",
            abbrev: "Gr",
        },
        /**  */
        Yellow: {
            id: 3,
            name: "Yellow - DisplayNameOnly",
            abbrev: "Yellow - DisplayNameOnly",
        },
        /**  */
        Red: {
            id: 4,
            name: "Red - DisplayNameAndAbbrev",
            abbrev: "Red - Abbrev",
        },
        /**  */
        Black: {
            id: 5,
            name: "Black - DispName",
            abbrev: "Black - Abbrev",
        },
    };
})(TestEnumNamespace || (TestEnumNamespace = {}));
//# sourceMappingURL=testresultfile.js.map